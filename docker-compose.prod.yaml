version: '3'
services:
  web:
    build:
      context: .
      dockerfile: prod.Dockerfile
    ports:
      - '8000:8000'
    environment:
      - ENVIRONMENT=PROD
      - POSTGRES_HOST=db
    env_file:
      - .env
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             (python manage.py createsuperuser --noinput || true) &&
             gunicorn --bind 0.0.0.0:8000 mini_blog.wsgi:application"
    depends_on:
      db:
        condition: service_healthy
    links:
      - db

  db:
    image: postgres:latest
    user: postgres
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
